# Azure Pipelines documentation https://aka.ms/yaml

trigger:
  branches:
    include:
      - "main"
  tags:
    include:
      - "*"
pr:
  branches:
    include:
      - "*"

variables:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer.
  MINVERBUILDMETADATA: build.$(Build.BuildId)

stages:
  - stage: Build
    jobs:
      - job: Build
        strategy:
          matrix:
            Linux:
              matrixName: Ubuntu
              vmImageName: ubuntu-latest
            Mac:
              matrixName: Mac
              vmImageName: macos-latest
            Windows:
              matrixName: Windows
              vmImageName: windows-latest
        pool:
          vmImage: $(vmImageName)
        timeoutInMinutes: 10
        steps:
          - checkout: self
            lfs: true
          - task: UseDotNet@2.207.2
            displayName: "Install .NET Core 3.1 SDK"
            inputs:
              packageType: "sdk"
              version: 3.1.x
          - task: UseDotNet@2.207.2
            displayName: "Install .NET Core 5.0 SDK"
            inputs:
              packageType: "sdk"
              version: 5.0.x
          - task: UseDotNet@2.207.2
            displayName: "Install .NET Core SDK"
            inputs:
              packageType: "sdk"
              useGlobalJson: true
          - pwsh: "dotnet tool restore"
            displayName: "Dotnet Tool Restore"
            failOnStderr: true
          - pwsh: "dotnet cake --target=Build"
            displayName: "Dotnet Cake Build"
            failOnStderr: true
          - pwsh: "dotnet cake --target=Test"
            displayName: "Dotnet Cake Test"
            failOnStderr: true
          - pwsh: "dotnet cake --target=Pack"
            displayName: "Dotnet Cake Pack"
            failOnStderr: true
          - task: PublishTestResults@2
            displayName: "Publish Test Results"
            inputs:
              testResultsFormat: "VSTest"
              testResultsFiles: "**/*.trx"
          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: cobertura
              summaryFileLocation: "**/*.cobertura.xml"
          - publish: "./Artefacts"
            artifact: $(matrixName)
            displayName: "Publish Artefacts"
  - stage: Deploy
    jobs:
      - deployment: AzureArtefacts
        displayName: "Azure Artefacts"
        condition: ne(variables['Build.Reason'], 'PullRequest')
        pool:
          vmImage: windows-latest
        environment: "Azure Artefacts"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: NuGetToolInstaller@1
                  displayName: "NuGet Install"
                - task: NuGetAuthenticate@0
                  displayName: "NuGet Authenticate"
                - pwsh: nuget push $(Agent.BuildDirectory)\Windows\*.nupkg -Source https://pkgs.dev.azure.com/dotnet-boxed/_packaging/dotnet-boxed/nuget/v3/index.json -ApiKey AzureArtifacts -SkipDuplicate
                  displayName: "NuGet Push"
                  failOnStderr: true
